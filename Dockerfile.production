# Build stage for React app
FROM node:22-alpine AS web-builder

WORKDIR /app

# Copy root files
COPY package*.json ./
COPY tsconfig.base.json ./
COPY turbo.json ./

# Copy package files
COPY packages/shared/package*.json packages/shared/
COPY apps/web/package*.json apps/web/

# Install dependencies
RUN npm ci --workspace=@umbral-nexus/web --ignore-scripts

# Copy source code
COPY packages/shared packages/shared
COPY apps/web apps/web

# Build shared package and web app
RUN npm run build --workspace=@umbral-nexus/shared
RUN npm run build --workspace=@umbral-nexus/web

# Build stage for server
FROM node:22-alpine AS server-builder

WORKDIR /app

# Copy root files
COPY package*.json ./
COPY tsconfig.base.json ./
COPY turbo.json ./

# Copy package files
COPY packages/shared/package*.json packages/shared/
COPY packages/server/package*.json packages/server/

# Install dependencies
RUN npm ci --workspace=@umbral-nexus/server --ignore-scripts

# Copy source code
COPY packages/shared packages/shared
COPY packages/server packages/server

# Build the server
RUN npm run build --workspace=@umbral-nexus/shared
RUN npm run build --workspace=@umbral-nexus/server

# Production stage
FROM node:22-alpine

WORKDIR /app

# Install dumb-init and supervisor for running multiple processes
RUN apk add --no-cache dumb-init supervisor

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Copy package files for production install
COPY --from=server-builder --chown=nodejs:nodejs /app/package*.json ./
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/server/package*.json ./packages/server/
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/shared/package*.json ./packages/shared/

# Install production dependencies
RUN npm ci --workspace=@umbral-nexus/server --omit=dev --ignore-scripts

# Copy built server application
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/server/dist ./packages/server/dist
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/shared/dist ./packages/shared/dist

# Copy built React app
COPY --from=web-builder --chown=nodejs:nodejs /app/apps/web/dist ./packages/server/web/dist

# Create supervisor config
RUN mkdir -p /etc/supervisor/conf.d
COPY --chown=nodejs:nodejs <<'EOF' /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=nodejs

[program:api-server]
command=node packages/server/dist/index.js
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
autorestart=true

[program:frontend-server]
command=node packages/server/dist/frontend-server.js
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
autorestart=true
EOF

# Switch to non-root user
USER nodejs

# Expose both ports
EXPOSE 8887 8888

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]