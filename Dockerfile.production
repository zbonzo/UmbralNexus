# Build stage for React app
FROM node:22-alpine AS web-builder

WORKDIR /app

# Copy root files
COPY package*.json ./
COPY tsconfig.base.json ./
COPY turbo.json ./

# Copy all package files
COPY packages/shared/package*.json packages/shared/
COPY packages/server/package*.json packages/server/
COPY apps/web/package*.json apps/web/

# Install all dependencies first
ENV HUSKY=0
RUN npm ci --ignore-scripts --legacy-peer-deps

# Copy source code
COPY packages/shared packages/shared
COPY apps/web apps/web

# Build shared package and web app
RUN npm run build --workspace=@umbral-nexus/shared
RUN npm run build --workspace=@umbral-nexus/web

# Build stage for server
FROM node:22-alpine AS server-builder

WORKDIR /app

# Copy root files
COPY package*.json ./
COPY tsconfig.base.json ./
COPY turbo.json ./

# Copy all package files
COPY packages/shared/package*.json packages/shared/
COPY packages/server/package*.json packages/server/
COPY apps/web/package*.json apps/web/

# Install dependencies
ENV HUSKY=0
RUN npm ci --ignore-scripts --legacy-peer-deps

# Copy source code
COPY packages/shared packages/shared
COPY packages/server packages/server

# Build the server
RUN npm run build --workspace=@umbral-nexus/shared
RUN npm run build --workspace=@umbral-nexus/server

# Production stage
FROM node:22-alpine

WORKDIR /app

# Install dumb-init and supervisor for running multiple processes
RUN apk add --no-cache dumb-init supervisor

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001

# Copy package files for production install
COPY --from=server-builder --chown=nodejs:nodejs /app/package*.json ./
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/server/package*.json ./packages/server/
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/shared/package*.json ./packages/shared/

# Install production dependencies
RUN npm ci --workspace=@umbral-nexus/server --omit=dev --ignore-scripts --legacy-peer-deps

# Copy built server application
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/server/dist ./packages/server/dist
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/shared/dist ./packages/shared/dist

# Copy built React app
COPY --from=web-builder --chown=nodejs:nodejs /app/apps/web/dist ./packages/server/web/dist

# Copy server source files (for simple-frontend.js)
COPY --from=server-builder --chown=nodejs:nodejs /app/packages/server/src ./packages/server/src

# Copy startup script
COPY packages/server/start-production.sh ./start-production.sh
RUN chmod +x ./start-production.sh && chown nodejs:nodejs ./start-production.sh

# Switch to non-root user
USER nodejs

# Expose both ports
EXPOSE 8887 8888

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "./start-production.sh"]